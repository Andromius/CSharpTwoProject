@{
    ViewData["Title"] = "Register";
}
<h1>Register:</h1>
@{
	if(ViewBag.ValidationMessage is not null)
	{
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Warning!</strong>
			<ul>
				@foreach (string line in ViewBag.ValidationMessage)
				{
					if(!string.IsNullOrEmpty(line))
					{
						<li>@line</li>
					}	
				}
			</ul>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	}
}
@model RegistrationForm
@using(Html.BeginForm())
{
	<div class="mb-3">
		@Html.LabelFor(x => x.Name, new Dictionary<string, object>() { {"class", "form-label"} })
		@Html.TextBoxFor(x => x.Name, new Dictionary<string, object>() { {"class", "form-control"} })
	</div>
	<div class="mb-3">
		@Html.LabelFor(x => x.Surname, new Dictionary<string, object>() { {"class", "form-label"} })
		@Html.TextBoxFor(x => x.Surname, new Dictionary<string, object>() { {"class", "form-control"}})
	</div>
	<div class="mb-3">
		@Html.LabelFor(x => x.Email, new Dictionary<string, object>() { {"class", "form-label"} })
		@Html.TextBoxFor(x => x.Email, new Dictionary<string, object>() { {"class", "form-control"}})
	</div>
	<div class="mb-3">
		@Html.LabelFor(x => x.Password, new Dictionary<string, object>() { {"class", "form-label"} })
		@Html.TextBoxFor(x => x.Password, new Dictionary<string, object>() { {"class", "form-control"}, {"type", "password"} })
	</div>
	<div class="mb-3">
		@Html.LabelFor(x => x.PasswordConfirm, new Dictionary<string, object>() { {"class", "form-label"} })
		@Html.TextBoxFor(x => x.PasswordConfirm, new Dictionary<string, object>() { {"class", "form-control"}, {"type", "password"} })
	</div>
	<button class="btn btn-primary" type="submit">Register</button>
}